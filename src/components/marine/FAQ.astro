---
// src/components/marine/FAQ.astro
export interface FAQItem {
  question: string;
  answer: string;
  category?: string;
}

export interface Props {
  faqs: FAQItem[];
  title?: string;
  description?: string;
  style?: 'default' | 'compact' | 'detailed';
  showSearch?: boolean;
  categories?: string[];
  className?: string;
}

const {
  faqs,
  title = 'Frequently Asked Questions',
  description = 'Common questions about marine detailing, product recommendations, and maintenance techniques.',
  style = 'default',
  showSearch = false,
  categories = [],
  className = ''
} = Astro.props;

// Get unique categories from FAQs if not provided
const faqCategories = categories.length > 0 ? categories : 
  [...new Set(faqs.map(faq => faq.category).filter(Boolean))];
---

<section class={`faq-section ${className}`}>
  <div class="max-w-4xl mx-auto px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-light text-gray-900 mb-4">
        {title}
      </h2>
      {description && (
        <p class="text-gray-600 font-light max-w-2xl mx-auto">
          {description}
        </p>
      )}
    </div>

    {showSearch && (
      <div class="mb-8">
        <div class="relative max-w-2xl mx-auto">
          <input 
            type="text" 
            placeholder="Search FAQs..."
            class="w-full px-4 py-3 pr-12 border border-gray-300 focus:outline-none focus:border-gray-900 transition-colors"
            id="faq-search"
          >
          <div class="absolute right-3 top-3 text-gray-400">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
            </svg>
          </div>
        </div>
      </div>
    )}

    {faqCategories.length > 0 && (
      <div class="mb-8">
        <div class="flex flex-wrap justify-center gap-3">
          <button 
            class="faq-category-btn active px-4 py-2 text-sm border bg-gray-900 text-white border-gray-900"
            data-category="all"
          >
            All Questions
          </button>
          {faqCategories.map((category) => (
            <button 
              class="faq-category-btn px-4 py-2 text-sm border bg-white text-gray-600 border-gray-300 hover:border-gray-900 transition-colors"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>
    )}
    
    <div class="faq-container space-y-4">
      {faqs.map((faq, index) => (
        <details 
          class={`faq-item bg-white border border-gray-200 group ${style === 'compact' ? 'compact' : ''}`}
          data-category={faq.category || 'general'}
        >
          <summary class="px-6 py-4 cursor-pointer font-medium text-gray-900 flex justify-between items-center hover:bg-gray-50 transition-colors">
            <span class="faq-question">{faq.question}</span>
            <span class="faq-icon text-gray-400 group-open:rotate-180 transition-transform duration-200">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
              </svg>
            </span>
          </summary>
          <div class="faq-answer px-6 pb-4 text-gray-600 font-light leading-relaxed border-t border-gray-100 pt-4">
            <div set:html={faq.answer} />
          </div>
        </details>
      ))}
    </div>

    <!-- No results message (hidden by default) -->
    <div id="no-results" class="hidden text-center py-8">
      <div class="text-gray-400 mb-4">
        <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33"/>
        </svg>
      </div>
      <h3 class="text-lg font-medium text-gray-900 mb-2">No questions found</h3>
      <p class="text-gray-600">Try adjusting your search or browse all categories.</p>
    </div>

    <!-- Contact CTA -->
    <div class="mt-12 text-center bg-gray-50 border border-gray-200 p-8">
      <h3 class="text-xl font-medium text-gray-900 mb-4">Still have questions?</h3>
      <p class="text-gray-800 mb-6 font-light">
        Can't find what you're looking for? Our marine detailing experts are here to help with personalized advice.
      </p>
      <a 
        href="/contact"
        class="inline-flex items-center bg-gray-900 text-white px-6 py-3 font-medium hover:bg-gray-700 transition-colors"
      >
        Contact Us
        <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"/>
        </svg>
      </a>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('faq-search');
    const categoryBtns = document.querySelectorAll('.faq-category-btn');
    const faqItems = document.querySelectorAll('.faq-item');
    const noResults = document.getElementById('no-results');
    
    let currentCategory = 'all';
    let currentSearch = '';

    // Search functionality
    if (searchInput) {
      searchInput.addEventListener('input', function(e) {
        currentSearch = e.target.value.toLowerCase();
        filterFAQs();
      });
    }

    // Category filtering
    categoryBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        // Update active state
        categoryBtns.forEach(b => b.classList.remove('active', 'bg-gray-900', 'text-white'));
        categoryBtns.forEach(b => b.classList.add('bg-white', 'text-gray-600'));
        
        this.classList.add('active', 'bg-gray-900', 'text-white');
        this.classList.remove('bg-white', 'text-gray-600');
        
        currentCategory = this.dataset.category;
        filterFAQs();
      });
    });

    function filterFAQs() {
      let visibleCount = 0;
      
      faqItems.forEach(item => {
        const category = item.dataset.category;
        const question = item.querySelector('.faq-question').textContent.toLowerCase();
        const answer = item.querySelector('.faq-answer').textContent.toLowerCase();
        
        const matchesCategory = currentCategory === 'all' || category === currentCategory;
        const matchesSearch = currentSearch === '' || 
          question.includes(currentSearch) || 
          answer.includes(currentSearch);
        
        if (matchesCategory && matchesSearch) {
          item.style.display = 'block';
          visibleCount++;
        } else {
          item.style.display = 'none';
        }
      });
      
      // Show/hide no results message
      if (noResults) {
        if (visibleCount === 0 && (currentSearch !== '' || currentCategory !== 'all')) {
          noResults.classList.remove('hidden');
        } else {
          noResults.classList.add('hidden');
        }
      }
    }

    // Smooth scrolling for anchor links
    document.addEventListener('click', function(e) {
      if (e.target.matches('a[href^="#faq"]')) {
        e.preventDefault();
        const targetId = e.target.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
          targetElement.scrollIntoView({ behavior: 'smooth' });
          // Open the FAQ if it's a details element
          if (targetElement.tagName === 'DETAILS') {
            targetElement.open = true;
          }
        }
      }
    });

    // Analytics tracking for FAQ interactions
    faqItems.forEach((item, index) => {
      item.addEventListener('toggle', function() {
        if (this.open && typeof gtag !== 'undefined') {
          const question = this.querySelector('.faq-question').textContent;
          gtag('event', 'faq_opened', {
            'event_category': 'engagement',
            'event_label': question,
            'faq_position': index + 1
          });
        }
      });
    });
  });
</script>

<style>
  .faq-section .compact .faq-item {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  
  .faq-section .compact summary {
    padding: 0.75rem 1rem;
  }
  
  .faq-section .compact .faq-answer {
    padding: 0.75rem 1rem 0.75rem 1rem;
  }
  
  /* Smooth transitions for FAQ items */
  .faq-item {
    transition: all 0.2s ease;
  }
  
  .faq-item:hover {
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  }
  
  /* Search highlight styles */
  .search-highlight {
    background-color: rgb(254 240 138);
  }
</style>